# services:
#   com.api:
#     image: ${DOCKER_REGISTRY-}comapi
#     build:
#       context: .
#       dockerfile: COM.API/Dockerfile

# version: '3.8'

services:
  db:
    image: postgis/postgis:15-3.4
    container_name: construction_db
    environment:
      POSTGRES_DB: construction_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  com.api:
    image: ${DOCKER_REGISTRY-}comapi
    build: 
      context: .          
      dockerfile: COM.API/Dockerfile 
    container_name: com_api_container
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./COM.API/appsettings.json:/app/appsettings.json

volumes:
  pgdata: