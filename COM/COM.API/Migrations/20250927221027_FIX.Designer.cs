// <auto-generated />
using System;
using COM.API.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace COM.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250927221027_FIX")]
    partial class FIX
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("COM.API.Domain.Entities.Checklist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ConstructionObjectId")
                        .HasColumnType("uuid")
                        .HasColumnName("construction_object_id");

                    b.Property<string>("Content")
                        .HasColumnType("JSONB")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("FileId")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("file_id");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("ConstructionObjectId");

                    b.ToTable("checklists", (string)null);
                });

            modelBuilder.Entity("COM.API.Domain.Entities.ConstructionObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("end_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("name");

                    b.Property<string>("Polygon")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("polygon");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start_date");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("Status");

                    b.ToTable("construction_objects", (string)null);
                });

            modelBuilder.Entity("COM.API.Domain.Entities.ObjectResponsible", b =>
                {
                    b.Property<Guid>("ConstructionObjectId")
                        .HasColumnType("uuid")
                        .HasColumnName("construction_object_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<int>("Role")
                        .HasColumnType("integer")
                        .HasColumnName("role");

                    b.HasKey("ConstructionObjectId", "UserId", "Role");

                    b.ToTable("object_responsibles", (string)null);
                });

            modelBuilder.Entity("COM.API.Domain.Entities.Checklist", b =>
                {
                    b.HasOne("COM.API.Domain.Entities.ConstructionObject", null)
                        .WithMany("Checklists")
                        .HasForeignKey("ConstructionObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("COM.API.Domain.Entities.ObjectResponsible", b =>
                {
                    b.HasOne("COM.API.Domain.Entities.ConstructionObject", null)
                        .WithMany("Responsibles")
                        .HasForeignKey("ConstructionObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("COM.API.Domain.Entities.ConstructionObject", b =>
                {
                    b.Navigation("Checklists");

                    b.Navigation("Responsibles");
                });
#pragma warning restore 612, 618
        }
    }
}
